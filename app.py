# -*- coding: utf-8 -*-
"""app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16TYUCaAq25wMFIfWQBkPBwjtxZi2-CuZ
"""

import streamlit as st
import pickle
import re
import string
import nltk
from nltk.corpus import stopwords

# تحميل stopwords
nltk.download('stopwords')
stop_words = set(stopwords.words('english'))

# تحميل الملفات المحفوظة
with open("model.pkl", "rb") as f:
    model = pickle.load(f)

with open("vectorizer.pkl", "rb") as f:
    vectorizer = pickle.load(f)

with open("encoder.pkl", "rb") as f:
    encoder = pickle.load(f)

# تنظيف النصوص
def clean_text(text):
    text = text.lower()
    text = re.sub(r"http\S+|www\S+|https\S+", '', text)
    text = re.sub(r'\@[\w]*', '', text)
    text = re.sub(r'#[A-Za-z0-9_]+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    text = re.sub(r'\d+', '', text)
    text = text.strip()
    text = ' '.join([word for word in text.split() if word not in stop_words])
    return text

# التنبؤ بالمشاعر
def predict_sentiment(text):
    cleaned = clean_text(text)
    vec = vectorizer.transform([cleaned])
    pred = model.predict(vec)
    label = encoder.inverse_transform(pred)
    return label[0]

# 🎨 CSS مخصص
custom_css = """
<style>
[data-testid="stAppViewContainer"] {
    background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
    background-size: 400% 400%;
    animation: gradientMove 15s ease infinite;
}
@keyframes gradientMove {
    0% {background-position: 0% 50%;}
    50% {background-position: 100% 50%;}
    100% {background-position: 0% 50%;}
}
h1, .stTextInput label, .stTextArea label, .stButton button {
    color: #fff;
    font-family: 'Segoe UI', sans-serif;
}
.stTextArea textarea {
    height: 300px !important;
    font-size: 20px !important;
    color: #fff !important;
    background-color: rgba(17,17,17,0.85) !important;
    border: 2px solid #4facfe !important;
    border-radius: 15px !important;
    padding: 20px !important;
}
.stButton button {
    border: 2px solid #4facfe;
    background-color: transparent;
    color: #fff;
    border-radius: 15px;
    font-size: 18px;
    padding: 10px 20px;
    transition: all 0.3s ease;
}
.stButton button:hover {
    background-color: #4facfe;
    color: #000;
}
</style>
"""

st.markdown(custom_css, unsafe_allow_html=True)

# واجهة التطبيق
st.title("💬 Sentiment Analyzer")
st.subheader("✨ Write a comment and I'll tell you if it's positive or negative!")

user_input = st.text_area("📝 Your Comment:")

if st.button("Analyze Sentiment"):
    if user_input.strip() == "":
        st.warning("⚠️ Please write something first.")
    else:
        result = predict_sentiment(user_input)
        if result == "positive":
            st.success("🥰 Sentiment: Positive")
        else:
            st.error("😠 Sentiment: Negative")
